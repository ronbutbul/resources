apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: karpenter-nodepool
spec:
  template:
    metadata:
      labels:
        example.com/special-taint: test
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot", "on-demand"]
          #values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          #values: ["t3a.2xlarge", "t3a.xlarge", "c5a.4xlarge", "c5a.2xlarge", "c5a.xlarge"]
          values: ["c", "m", "r"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        name: default
      taints:
        - key: example.com/special-taint
          effect: NoSchedule        
 # limits:
 #   cpu: 1150
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 1s
    
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2 # Amazon Linux 2
  role: "KarpenterInstanceNodeRole" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "eks-karpenter-test2" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "eks-karpenter-test2" # replace with your cluster name